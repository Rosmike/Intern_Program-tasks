{"version":3,"sources":["components/RoomCard.jsx","views/HomeView.jsx","components/DeviceCard.jsx","components/AddDeviceDialog.jsx","components/ConfirmDialog.jsx","views/RoomView.jsx","data/allRooms.js","App.js","index.js"],"names":["useStyles","makeStyles","root","margin","title","fontSize","fontWeight","additionalInfo","pos","marginBottom","RoomCard","id","name","numberOfUsers","devices","toggleRoom","isActive","classes","history","useHistory","Grow","in","Card","className","CardActionArea","onClick","e","push","CardContent","Typography","gutterBottom","length","Box","display","justifyContent","Switch","checked","inputProps","HomeView","rooms","addRoom","Fragment","Avatar","style","alt","src","color","maxWidth","mt","mr","Tooltip","aria-label","placement","Fab","backgroundColor","Grid","container","map","item","xs","md","lg","DeviceCard","device","toggleDevice","parameter","isEditMode","useState","showDetails","setShowDetails","stopPropagation","value","alignItems","height","Collapse","mx","Slider","defaultValue","getAriaValueText","valueLabelDisplay","step","marks","min","max","parameterSelect","width","AddDeviceDialog","editItem","open","handleClose","addDevice","editDevice","setConfirmDialogOpen","bulkToggleAllowed","setBulkToggleAllowed","setParameter","setName","selectOpen","setSelectOpen","useEffect","resetForm","isValid","Dialog","fullScreen","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","required","autoFocus","label","type","fullWidth","onChange","target","FormControlLabel","control","Checkbox","FormControl","InputLabel","Select","labelId","onOpen","MenuItem","Button","variant","startIcon","DialogActions","disabled","Transition","React","forwardRef","props","ref","Slide","direction","ConfirmDialog","text","onConfirm","cancelText","confirmText","TransitionComponent","keepMounted","aria-describedby","DialogContentText","RoomView","setRooms","params","useParams","roomId","parseInt","room","find","setIsEditMode","confirmRoomDialogOpen","setConfirmRoomDialogOpen","confirmDeviceDialogOpen","setConfirmDeviceDialogOpen","setEditItem","showAddDeviceDialog","setShowAddDeviceDialog","getParameterObject","minValue","maxValue","deviceObj","roomsToUpdate","newDevice","roomToChangeIndex","findIndex","deviceToChangeIndex","ml","mb","go","ArrowBack","labelPlacement","sm","filtered","filter","allRooms","ROOMS_LOCALSTORAGE_KEY","ROOMS_COPY_LOCALSTORAGE_KEY","App","roomsFromLS","JSON","parse","localStorage","getItem","defaultRooms","Array","isArray","useRoomsFromCopy","setUseRoomsFromCopy","setItem","stringify","basename","process","exact","path","newRoom","newValue","roomsCopy","forEach","roomIndex","deviceIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c4d33c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardContent, Grow, Switch, Box } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 15,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: 700,\n  },\n  additionalInfo: {\n    fontSize: 11,\n    fontWeight: 500,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const RoomCard = ({\n  id,\n  name,\n  numberOfUsers,\n  devices,\n  toggleRoom,\n  isActive,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleRoomTileClick = () => history.push(`/room/${id}`);\n\n  return (\n    <Grow in>\n      <Card className={classes.root}>\n        <CardActionArea onClick={(e) => handleRoomTileClick(e)}>\n          <CardContent>\n            <Typography className={classes.title} gutterBottom>\n              {name}\n            </Typography>\n            <Typography className={classes.additionalInfo} gutterBottom>\n              {numberOfUsers} family members have access\n            </Typography>\n            <Typography className={classes.additionalInfo} gutterBottom>\n              {devices.length} {devices.length === 1 ? \"device\" : \"devices\"}\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Switch\n                checked={isActive}\n                onClick={(e) => toggleRoom(e, id, isActive)}\n                name=\"editMode\"\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grow>\n  );\n};\n","import React from \"react\";\nimport { Avatar, Box, Fab, Grid, Tooltip } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { RoomCard } from \"../components/RoomCard\";\n\nexport const HomeView = ({ rooms, addRoom, toggleRoom }) => {\n  return (\n    <React.Fragment>\n      <Avatar\n        style={{ margin: \"10px\" }}\n        alt=\"Remy Sharp\"\n        src=\"/static/images/avatar/1.jpg\"\n      />\n      <div\n        style={{\n          color: \"white\",\n          margin: \"10px\",\n          maxWidth: \"140px\",\n          fontWeight: \"bold\",\n        }}\n      >\n        Welcome home Michał\n      </div>\n      <Box display=\"flex\" justifyContent=\"flex-end\" mt={2} mr={2}>\n        <Tooltip title=\"Add room\" aria-label=\"add\" placement=\"left\">\n          <Fab\n            style={{ backgroundColor: \"white\", color: \"orange\" }}\n            aria-label=\"add\"\n            onClick={() => addRoom()}\n          >\n            <AddIcon />\n          </Fab>\n        </Tooltip>\n      </Box>\n      <Grid container>\n        {rooms.map(({ isActive, id, name, numberOfUsers, devices }) => {\n          return (\n            <Grid key={id} item xs={6} md={3} lg={2}>\n              <RoomCard\n                id={id}\n                isActive={isActive}\n                name={name}\n                numberOfUsers={numberOfUsers}\n                devices={devices}\n                toggleRoom={toggleRoom}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Box,\n  CardContent,\n  Collapse,\n  Grid,\n  Grow,\n  Slider,\n  Switch,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 15,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: 700,\n  },\n  additionalInfo: {\n    fontSize: 11,\n    fontWeight: 500,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const DeviceCard = ({\n  isActive,\n  device,\n  toggleDevice,\n  name,\n  parameter,\n  isEditMode,\n}) => {\n  const classes = useStyles();\n\n  const [showDetails, setShowDetails] = useState(false);\n\n  const valuetext = (value) => {\n    return `${value}°C`;\n  };\n\n  return (\n    <Grow in>\n      <Card className={classes.root}>\n        <CardActionArea\n          onClick={(e) => {\n            if (!isEditMode) {\n              e.stopPropagation();\n              setShowDetails(!showDetails);\n            }\n          }}\n        >\n          <CardContent>\n            <Grid container>\n              <Grid item xs={6}>\n                <Typography className={classes.title} gutterBottom>\n                  {name}\n                </Typography>\n                <Typography className={classes.additionalInfo} gutterBottom>\n                  {parameter.value} {parameter.name}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"flex-end\"\n                  alignItems=\"center\"\n                  height=\"100%\"\n                >\n                  <Switch\n                    checked={isActive}\n                    onClick={(e) => toggleDevice(e, device, isActive)}\n                    name=\"editMode\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Collapse in={showDetails}>\n            <Box mx={3}>\n              {/*// TODO: handle this slider functionally*/}\n              <Slider\n                defaultValue={50}\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"auto\"\n                step={10}\n                marks\n                min={0}\n                max={100}\n              />\n            </Box>\n          </Collapse>\n        </CardActionArea>\n      </Card>\n    </Grow>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Grow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  parameterSelect: {\n    width: \"100%\",\n  },\n});\n\nexport const AddDeviceDialog = ({\n  editItem,\n  open,\n  handleClose,\n  addDevice,\n  editDevice,\n  setConfirmDialogOpen,\n}) => {\n  const classes = useStyles();\n  const [bulkToggleAllowed, setBulkToggleAllowed] = useState(false);\n  const [parameter, setParameter] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  useEffect(() => {\n    if (editItem) {\n      setName(editItem.name);\n      setBulkToggleAllowed(editItem.bulkToggleAllowed);\n      setParameter(editItem.parameter.name);\n    }\n  }, [editItem]);\n\n  const resetForm = () => {\n    setName(\"\");\n    setBulkToggleAllowed(false);\n    setParameter(\"\");\n  };\n\n  const isValid = name !== \"\" && parameter !== \"\";\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Add new device</DialogTitle>\n      <DialogContent>\n        <TextField\n          required\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Device name\"\n          type=\"text\"\n          fullWidth\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Box width=\"100%\" mt={3}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={bulkToggleAllowed}\n                onChange={() => setBulkToggleAllowed(!bulkToggleAllowed)}\n                name=\"bulkToggleAllowed\"\n              />\n            }\n            label=\"Do not turn off this device in bulk\"\n          />\n        </Box>\n        <Box width=\"100%\" mt={3}>\n          <FormControl className={classes.parameterSelect}>\n            <InputLabel id=\"demo-simple-select-label\">Parameter</InputLabel>\n            <Select\n              required\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              open={selectOpen}\n              onOpen={() => setSelectOpen(true)}\n              onClose={() => setSelectOpen(false)}\n              value={parameter}\n              onChange={(e) => setParameter(e.target.value)}\n            >\n              <MenuItem value={\"Temperature\"}>Temperature</MenuItem>\n              <MenuItem value={\"Volume\"}>Volume</MenuItem>\n              <MenuItem value={\"Brightness\"}>Brightness</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        <Grow in>\n          <Box mx={2}>\n            <Box mt={1}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<DeleteIcon />}\n                onClick={() => setConfirmDialogOpen(true)}\n              >\n                Delete this device\n              </Button>\n            </Box>\n          </Box>\n        </Grow>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose();\n            resetForm();\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          disabled={!isValid}\n          onClick={() => {\n            editItem\n              ? editDevice({ name, bulkToggleAllowed, parameter })\n              : addDevice({ name, bulkToggleAllowed, parameter });\n            handleClose();\n            resetForm();\n          }}\n          color=\"primary\"\n        >\n          {editItem ? \"Save\" : \"Add\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmDialog = ({\n  open = false,\n  handleClose,\n  title,\n  text,\n  onConfirm,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n}) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {text}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"secondary\">\n          {cancelText}\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\">\n          {confirmText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useHistory } from \"react-router\";\nimport {\n  Box,\n  Button,\n  Fab,\n  FormControlLabel,\n  Grid,\n  Grow,\n  Switch,\n  Tooltip,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport React, { useState } from \"react\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { useParams } from \"react-router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { DeviceCard } from \"../components/DeviceCard\";\n\nimport { AddDeviceDialog } from \"../components/AddDeviceDialog\";\nimport { ConfirmDialog } from \"../components/ConfirmDialog\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 15,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 700,\n  },\n  additionalInfo: {\n    fontSize: 11,\n    fontWeight: 500,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const RoomView = ({ rooms, setRooms }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams();\n  const roomId = parseInt(params.roomId);\n  const room = rooms.find((room) => room.id === roomId);\n\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [confirmRoomDialogOpen, setConfirmRoomDialogOpen] = useState(false);\n  const [confirmDeviceDialogOpen, setConfirmDeviceDialogOpen] = useState(false);\n  const [editItem, setEditItem] = useState(null);\n  const [showAddDeviceDialog, setShowAddDeviceDialog] = useState(false);\n\n  const toggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n  };\n\n  const getParameterObject = (parameter) => {\n    switch (parameter) {\n      case \"Brightness\":\n        return {\n          name: \"Brightness\",\n          type: \"percent\",\n          value: \"0\",\n          minValue: \"0\",\n          maxValue: \"100\",\n        };\n      case \"Temperature\":\n        return {\n          name: \"Temperature\",\n          type: \"celsius\",\n          value: \"0\",\n          minValue: \"-12\",\n          maxValue: \"-2\",\n        };\n      case \"Volume\":\n        return {\n          name: \"Volume\",\n          type: \"percent\",\n          value: \"0\",\n          minValue: \"0\",\n          maxValue: \"100\",\n        };\n      default:\n        break;\n    }\n  };\n\n  const editDevice = ({ name, bulkToggleAllowed, parameter }) => {\n    const roomsToUpdate = [...rooms];\n    const newDevice = {\n      name,\n      bulkToggleAllowed,\n      isActive: false,\n      parameter:\n        parameter === editItem.parameter.name\n          ? editItem.parameter\n          : getParameterObject(parameter),\n    };\n\n    const roomToChangeIndex = roomsToUpdate.findIndex(\n      (item) => item.id === roomId\n    );\n    const deviceToChangeIndex = roomsToUpdate[\n      roomToChangeIndex\n    ].devices.findIndex((device) => device.id === editItem.id);\n\n    roomsToUpdate[roomToChangeIndex].devices[deviceToChangeIndex] = newDevice;\n\n    setRooms(roomsToUpdate);\n  };\n\n  const toggleDevice = (e, deviceObj, isActive) => {\n    //TODO: when device is the last to be turned off, turn off the room, else turn on the room\n    e.stopPropagation();\n\n    const roomsToUpdate = [...rooms];\n\n    const newDevice = {\n      ...deviceObj,\n      isActive: !isActive,\n    };\n\n    const roomToChangeIndex = roomsToUpdate.findIndex(\n      (item) => item.id === roomId\n    );\n    const deviceToChangeIndex = roomsToUpdate[\n      roomToChangeIndex\n    ].devices.findIndex((device) => device.id === deviceObj.id);\n\n    roomsToUpdate[roomToChangeIndex].devices[deviceToChangeIndex] = newDevice;\n\n    setRooms(roomsToUpdate);\n  };\n\n  const removeDevice = () => {\n    const roomsToFilter = [...rooms];\n    const filtered = roomsToFilter.filter((room) => room.id !== roomId);\n\n    history.push(\"/\");\n    setConfirmRoomDialogOpen(false);\n    setRooms(filtered);\n  };\n\n  const addDevice = ({ name, bulkToggleAllowed, parameter }) => {\n    const roomsToUpdate = [...rooms];\n    const newDevice = {\n      id:\n        room.devices.length > 0\n          ? room.devices[room.devices.length - 1].id + 1\n          : 1,\n      name,\n      bulkToggleAllowed,\n      isActive: false,\n      parameter: getParameterObject(parameter),\n    };\n\n    const roomToChangeIndex = roomsToUpdate.findIndex(\n      (item) => item.id === roomId\n    );\n\n    roomsToUpdate[roomToChangeIndex].devices.push(newDevice);\n\n    setRooms(roomsToUpdate);\n  };\n\n  const removeRoom = () => {\n    const roomsToFilter = [...rooms];\n    const filtered = roomsToFilter.filter((room) => room.id !== roomId);\n\n    history.push(\"/\");\n    setConfirmRoomDialogOpen(false);\n    setRooms(filtered);\n  };\n\n  return (\n    <div>\n      <Box display=\"flex\" justifyContent=\"flex-start\" mt={2} ml={2} mb={4}>\n        <Tooltip title=\"Go back\" aria-label=\"add\" placement=\"right\">\n          <Fab\n            style={{ backgroundColor: \"white\", color: \"orange\" }}\n            aria-label=\"add\"\n            onClick={() => history.go(-1)}\n          >\n            <ArrowBack />\n          </Fab>\n        </Tooltip>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"flex-end\" mt={2} mr={2} ml={4}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={isEditMode}\n              style={{ color: \"white\" }}\n              onChange={toggleEditMode}\n              name=\"editMode\"\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            />\n          }\n          label=\"Edit room\"\n          labelPlacement=\"start\"\n        />\n      </Box>\n      <Grid container>\n        <Grid item xs={12}>\n          <Box ml={2}>\n            <Typography\n              className={classes.title}\n              gutterBottom\n              style={{ color: \"white\" }}\n            >\n              {room.name}\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box ml={2}>\n            <Typography\n              className={classes.additionalInfo}\n              gutterBottom\n              style={{ color: \"white\" }}\n            >\n              {room.devices.length} family members have access\n            </Typography>\n          </Box>\n          <Grow in={isEditMode}>\n            <Box mx={2}>\n              <Box mt={1}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                  }}\n                  startIcon={<DeleteIcon />}\n                  onClick={() => setConfirmRoomDialogOpen(true)}\n                >\n                  Delete this room\n                </Button>\n              </Box>\n              <Box mt={1}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  style={{ backgroundColor: \"white\", fontWeight: \"bold\" }}\n                  onClick={() => setShowAddDeviceDialog(true)}\n                >\n                  Add new device\n                </Button>\n              </Box>\n            </Box>\n          </Grow>\n        </Grid>\n        {room.devices.map((device) => {\n          return (\n            <Grid key={device.id} item xs={12} sm={6} md={3} lg={2}>\n              <Box\n                onClick={() => {\n                  if (isEditMode) {\n                    setEditItem(device);\n                    setShowAddDeviceDialog(true);\n                  }\n                }}\n              >\n                <DeviceCard\n                  device={device}\n                  isActive={device.isActive}\n                  toggleDevice={toggleDevice}\n                  name={device.name}\n                  parameter={device.parameter}\n                  isEditMode={isEditMode}\n                />\n              </Box>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <AddDeviceDialog\n        editItem={editItem}\n        open={showAddDeviceDialog}\n        addDevice={addDevice}\n        editDevice={editDevice}\n        handleClose={() => {\n          setEditItem(null);\n          setShowAddDeviceDialog(false);\n        }}\n      />\n      <ConfirmDialog\n        open={confirmRoomDialogOpen}\n        title={\"Are you sure?\"}\n        text={\"You will delete this room permanently\"}\n        handleClose={() => setConfirmRoomDialogOpen(false)}\n        onConfirm={removeRoom}\n      />\n      <ConfirmDialog\n        open={confirmDeviceDialogOpen}\n        title={\"Are you sure?\"}\n        text={\"You will delete this device permanently\"}\n        handleClose={() => setConfirmDeviceDialogOpen(false)}\n        onConfirm={removeDevice}\n      />\n    </div>\n  );\n};\n","// Object with information about rooms\n\nexport const allRooms = [\n  {\n    id: 1,\n    name: \"Living Room\",\n    numberOfUsers: 3,\n    isActive: true,\n    devices: [\n      {\n        id: 1,\n        name: \"Lamp\",\n        bulkToggleAllowed: true,\n        isActive: true,\n        parameter: {\n          name: \"Brightness\",\n          type: \"percent\",\n          value: \"50\",\n          minValue: \"0\",\n          maxValue: \"100\",\n        },\n      },\n      {\n        id: 2,\n        name: \"TV\",\n        bulkToggleAllowed: true,\n        isActive: false,\n        parameter: {\n          name: \"Volume\",\n          type: \"percent\",\n          value: \"20\",\n          minValue: \"0\",\n          maxValue: \"100\",\n        },\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: \"Kitchen\",\n    numberOfUsers: 3,\n    isActive: true,\n    devices: [\n      {\n        id: 1,\n        name: \"Fridge\",\n        bulkToggleAllowed: false,\n        isActive: true,\n        parameter: {\n          name: \"Temperature\",\n          type: \"celsius\",\n          value: \"-8\",\n          minValue: \"-12\",\n          maxValue: \"-2\",\n        },\n      },\n    ],\n  },\n  {\n    id: 3,\n    name: \"Bed Room\",\n    numberOfUsers: 3,\n    isActive: true,\n    devices: [\n      {\n        id: 1,\n        name: \"Lamp\",\n        bulkToggleAllowed: true,\n        isActive: true,\n        parameter: {\n          name: \"Brightness\",\n          type: \"percent\",\n          value: \"50\",\n          minValue: \"0\",\n          maxValue: \"100\",\n        },\n      },\n    ],\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { HomeView } from \"./views/HomeView\";\nimport { RoomView } from \"./views/RoomView\";\nimport { allRooms } from \"./data/allRooms\";\n\nexport const ROOMS_LOCALSTORAGE_KEY = \"rooms\";\nexport const ROOMS_COPY_LOCALSTORAGE_KEY = \"roomsCopy\";\n\nconst App = () => {\n  const roomsFromLS = JSON.parse(localStorage.getItem(ROOMS_LOCALSTORAGE_KEY));\n\n  const defaultRooms = Array.isArray(roomsFromLS) ? roomsFromLS : allRooms;\n\n  const [rooms, setRooms] = useState(defaultRooms);\n  const [useRoomsFromCopy, setUseRoomsFromCopy] = useState(false);\n\n  useEffect(() => {\n    !useRoomsFromCopy &&\n      localStorage.setItem(ROOMS_LOCALSTORAGE_KEY, JSON.stringify(rooms));\n\n    setUseRoomsFromCopy(false);\n  }, [rooms]);\n\n  const addRoom = () => {\n    const newRoom = {\n      id: rooms[rooms.length - 1].id + 1,\n      name: \"New room\",\n      numberOfUsers: 0,\n      isActive: false,\n      devices: [],\n    };\n\n    setRooms([...rooms, newRoom]);\n  };\n\n  const toggleRoom = (e, roomId, isActive) => {\n    e.stopPropagation();\n    const roomsToUpdate = [...rooms];\n\n    const newValue = !isActive;\n\n    const roomToToggle = roomsToUpdate.find((room) => room.id === roomId);\n    roomToToggle.isActive = newValue;\n\n    // If new value is true go through all rooms and devices inside room and turn them on\n    if (newValue === true) {\n      const roomsCopy = JSON.parse(\n        localStorage.getItem(ROOMS_COPY_LOCALSTORAGE_KEY)\n      );\n\n      setUseRoomsFromCopy(true);\n\n      setRooms(roomsCopy);\n      // Else go through all rooms and devices inside room and turn them on is bulkToggleIsAllowed\n    } else {\n      localStorage.setItem(ROOMS_COPY_LOCALSTORAGE_KEY, JSON.stringify(rooms));\n\n      roomsToUpdate.forEach((room, roomIndex) => {\n        room.devices.forEach((device, deviceIndex) => {\n          if (device.bulkToggleAllowed) {\n            roomsToUpdate[roomIndex].devices[deviceIndex].isActive = false;\n          }\n        });\n      });\n    }\n\n    setRooms(roomsToUpdate);\n  };\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeView rooms={rooms} addRoom={addRoom} toggleRoom={toggleRoom} />\n          </Route>\n          <Route path=\"/room/:roomId\">\n            <RoomView rooms={rooms} setRooms={setRooms} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}